#Adding Likes in Firestore
const handleLike = async (noteId) => {
  const noteRef = firestore.collection('notes').doc(noteId);
  await noteRef.update({
    likes: firebase.firestore.FieldValue.increment(1),
  });
};

#Dynamic Marker Sizing
import React from 'react';
import { Marker } from 'react-native-maps';

const NoteMarker = ({ note }) => {
  const getSize = (likes) => {
    // Define a scaling function for the marker size
    return 30 + likes * 2;
  };

  return (
    <Marker
      coordinate={{ latitude: note.latitude, longitude: note.longitude }}
      title={note.content}
    >
      <View style={{ width: getSize(note.likes), height: getSize(note.likes), backgroundColor: 'rgba(0, 0, 255, 0.5)' }}>
        <Text>{note.content}</Text>
      </View>
    </Marker>
  );
};

export default NoteMarker;

#Integrating the Like Button
import React from 'react';
import { Marker, Callout } from 'react-native-maps';
import { View, Text, Button } from 'react-native';

const NoteMarker = ({ note, onLike }) => {
  const getSize = (likes) => 30 + likes * 2;

  return (
    <Marker
      coordinate={{ latitude: note.latitude, longitude: note.longitude }}
      title={note.content}
    >
      <View style={{ width: getSize(note.likes), height: getSize(note.likes), backgroundColor: 'rgba(0, 0, 255, 0.5)' }}>
        <Text>{note.content}</Text>
      </View>
      <Callout>
        <View>
          <Text>{note.content}</Text>
          <Text>Likes: {note.likes}</Text>
          <Button title="Like" onPress={() => onLike(note.id)} />
        </View>
      </Callout>
    </Marker>
  );
};

export default NoteMarker;
